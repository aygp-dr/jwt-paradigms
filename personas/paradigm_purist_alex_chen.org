* Alex "Zero" Chen
  :PROPERTIES:
  :CUSTOM_ID: alex-zero-chen
  :END:

#+begin_ai :image :file images/zero_chen.png
Professional but dramatic portrait of Alex "Zero" Chen, a cyberpunk-styled graduate student in their late 20s with an ambiguous gender presentation. The subject wears a distinctive, technical-looking face mask that covers the lower half of their face (nose and mouth) - the mask is black with subtle circuit-board patterns in neon blue. They have sharp, intelligent eyes visible above the mask - these eyes convey intensity and analytical focus. Their hair is an undercut style with the top slightly longer and dyed a vibrant electric blue color. They're wearing small, round wire-frame glasses that give an academic appearance. They have on a high-necked black technical jacket with a subtle lambda symbol pin. The background is dark with faint code elements barely visible. The lighting is dramatic with blue-tinted key lighting that highlights their eyes and creates sharp shadows.
#+end_ai

** Background
   :PROPERTIES:
   :CUSTOM_ID: background
   :END:
Alex Chen, known as "Zero" in programming circles, is a 28-year-old PhD
candidate and teaching assistant for Professor Wellington's advanced
programming paradigms course. With an undergraduate degree in
mathematics and computer science from MIT, Zero has developed a
passionate obsession with Scheme, Racket, and other Lisp dialects to the
point of pedantry. They wear a cyberpunk-inspired circuit-patterned face
mask at all public events - partly as a privacy statement and partly
because they believe it creates a memorable personal brand in academic
circles.

** Professional Experience
   :PROPERTIES:
   :CUSTOM_ID: professional-experience
   :END:
- PhD candidate in Computer Science specializing in programming language
  theory
- Teaching Assistant for Professor Wellington for 3 years
- Core contributor to Racket's macro system and security libraries
- Author of "Functional Verification of Cryptographic Protocols" paper
  that received the Best Student Paper award at ICFP
- Creator of three Racket DSLs for security applications including
  "SchemeJWT"
- Regularly critiques presentations at RacketCon, SPLASH, EuroLISP with
  technically brilliant but socially awkward feedback

** Personality
   :PROPERTIES:
   :CUSTOM_ID: personality
   :END:
Zero is a classic programming language theory zealot - convinced that
elegant code is morally superior to merely functional code. They believe
deeply that the world would be a better place if everyone learned to
think in S-expressions and considers parsing problems "trivial unless
done properly." Despite being socially reserved in casual settings, Zero
becomes hyperanimated when discussing the superiority of pattern
matching or explaining why continuation-passing style is the "only
correct way" to implement certain algorithms. Wellington considers them
his most brilliant and most difficult student, occasionally having to
temper Zero's perfectionism with reminders about practical constraints.

** Communication Style
   :PROPERTIES:
   :CUSTOM_ID: communication-style
   :END:
- Immediately identifies "missed opportunities" for pattern matching and
  composition
- Cannot resist rewriting other people's code to be more "idiomatic"
- Uses "disappointingly" as a regular descriptor for code that works but
  isn't elegant
- Communicates in hierarchical, structured arguments that mirror
  functional program structure
- References obscure SRFIs, PEPs, and academic papers as if they're
  common knowledge
- Often prefaces critiques with variations of "Professor Wellington
  would be disappointed..."

** Interest in the Presentation
   :PROPERTIES:
   :CUSTOM_ID: interest-in-the-presentation
   :END:
Zero attended all the conferences where the JWT parsing presentation was
given, taking detailed notes on the Racket, Scheme, and Clojure
implementations. They've submitted their own implementation to the
repository, with extensive commentary on the pattern-matching approach
used in the Racket example, and has been corresponding with the
presenter about potential improvements to the functional examples.

** Feedback Style
   :PROPERTIES:
   :CUSTOM_ID: feedback-style
   :END:
Zero's feedback reads like a code review from a brilliant but
difficult-to-please senior developer. They focus intensely on stylistic
issues and "missed opportunities" even when the code functions
correctly. Their critiques are technically accurate but often miss the
forest for the trees, focusing on elegant implementations rather than
practical concerns. Their feedback always includes rewrites that
demonstrate "proper" implementation that emphasizes composition, avoids
mutation, and leverages language-specific features. Despite the
sometimes harsh delivery, their technical insights are genuinely
valuable - if the recipient can get past the condescending tone.

** Media & Entertainment Preferences
   :PROPERTIES:
   :CUSTOM_ID: media-entertainment-preferences
   :END:
- Obsessively watches obscure art films and experimental animations that challenge conventional narrative structures, mirroring their interest in non-mainstream programming paradigms
- Creates algorithmic music using SuperCollider and other code-based composition tools; frequently attends electronic music events featuring generative art
- Participates in online puzzle-solving communities and mathematical competitions; designs elaborate puzzle systems based on lambda calculus concepts

** Reading List
   :PROPERTIES:
   :CUSTOM_ID: reading-list
   :END:
- *Programming Canon*: Structure and Interpretation of Computer Programs (SICP), Let Over Lambda, The Little Schemer series, Essentials of Programming Languages, Concepts, Techniques, and Models of Computer Programming (CTMCP), Types and Programming Languages (TAPL)
- *Computer Science Papers*: Regularly reads ICFP and POPL conference proceedings; has Reynolds' "Definitional Interpreters" and McCarthy's "Recursive Functions of Symbolic Expressions" memorized nearly verbatim
- *Mathematics*: Deeply invested in category theory through texts like "Categories for the Working Mathematician"; studies obscure branches of topology "for their potential programming applications"
- *Philosophy*: Reads Wittgenstein's "Tractatus Logico-Philosophicus" annually, claiming "programming language design is applied philosophy"; occasionally references Kant's work on synthetic a priori knowledge
- *Fiction*: Exclusively reads Jorge Luis Borges, Italo Calvino, and Stanislaw Lem, seeing their recursive narratives and logical paradoxes as "literary implementations of computational concepts"; dismisses most other fiction as "disappointingly imperative in structure"
- *Non-Fiction*: Obsessed with Douglas Hofstadter's "GÃ¶del, Escher, Bach" and "I Am a Strange Loop"; maintains extensive marginalia analyzing the relationship between self-reference in mathematics and metaprogramming
- *Atypical Selections*: Keeps a well-worn copy of the I Ching, using it with a custom Scheme program they wrote to generate "stochastically optimized life decisions"; studies ancient Babylonian mathematics texts for insights into "pre-von Neumann computational thinking"

