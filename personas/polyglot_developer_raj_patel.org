* Raj Patel
  :PROPERTIES:
  :CUSTOM_ID: raj-patel
  :END:
  
** Image Generation
   :PROPERTIES:
   :CUSTOM_ID: image-generation
   :END:

#+begin_ai :image
Professional headshot of Raj Patel, a 31-year-old Indian-American man with short, slightly wavy black hair styled neatly. He has medium brown skin, thoughtful dark eyes behind modern round glasses with thin metal frames, and a well-groomed short beard. He's wearing a light blue button-up shirt with a clean, professional appearance. The background is neutral dark gray. His expression is slightly smiling, conveying intelligence and curiosity. His face has a defined jawline and his posture is upright and engaged. Portrait lighting is crisp and professional, creating subtle shadows that highlight his facial structure.
#+end_ai

** Background
   :PROPERTIES:
   :CUSTOM_ID: background
   :END:
Raj Patel is a 31-year-old polyglot software engineer who currently
works as a technical lead at a mid-sized startup building cross-platform
developer tools. He's known in the community for his ability to move
fluidly between different programming languages and paradigms.
Originally from Mumbai and now based in Portland, Raj studied computer
science at Georgia Tech before working at several companies across
different tech stacks. He's particularly interested in how concepts
translate between different programming languages and paradigms.

** Professional Experience
   :PROPERTIES:
   :CUSTOM_ID: professional-experience
   :END:
- Lead Engineer at DevToolsCo, building multilingual debugging tools
- Previously worked in Clojure, Rust, Python, and TypeScript roles
- Creator of "Polyglot Patterns," a popular blog and newsletter
- Contributor to several open-source projects across different languages
- Occasional guest lecturer on comparative programming at coding
  bootcamps

** Personality
   :PROPERTIES:
   :CUSTOM_ID: personality
   :END:
Raj is enthusiastic, curious, and has a knack for finding connections
between seemingly disparate concepts. Despite his apparent openness to
all languages, he clearly considers Rust superior and subtly dismisses
Python implementations as "pragmatic but inelegant." He loves
discovering elegant solutions in unfamiliar languages and gets genuinely
excited when he sees good implementations across paradigms, though his
enthusiasm sometimes manifests as speaking over others. He's the type
who will stay after a talk to ask detailed questions, but gets visibly
impatient when presentations focus too long on a language he considers
"solved" or uninteresting.

** Communication Style
   :PROPERTIES:
   :CUSTOM_ID: communication-style
   :END:
- Asks comparative questions that bridge between paradigms, often
  beginning with "Well, in Haskell this would be trivial because..."
- Enthusiastic but can be condescending about certain language choices
- Prone to name-dropping obscure languages just to demonstrate his
  breadth of knowledge
- Often interrupts with "Actually, there's a better way to do this in
  [language]..."
- Uses analogies to make complex concepts more relatable, though
  sometimes these analogies assume knowledge others don't have
- Has a habit of audibly sighing when seeing code he considers inelegant

** Interests in JWT Presentations
   :PROPERTIES:
   :CUSTOM_ID: interests-in-jwt-presentations
   :END:
- How parsing strategies differ across functional and imperative
  paradigms
- The tradeoffs of different implementations
- Idiomatic approaches in each language
- Performance considerations across languages
- How type systems (or lack thereof) affect implementation safety

** Key Questions He Might Ask
   :PROPERTIES:
   :CUSTOM_ID: key-questions-he-might-ask
   :END:
- How would this implementation change in a language with algebraic data
  types?
- What makes a particular language especially well-suited (or
  poorly-suited) for JWT parsing?
- How do the error handling approaches compare across paradigms?
- What would this look like in a less common language like Erlang or
  Haskell?

** Feedback Style
   :PROPERTIES:
   :CUSTOM_ID: feedback-style
   :END:
Raj's feedback focuses on cross-language comparisons and how effectively
the presentation bridges between different programming paradigms. He
appreciates presentations that go beyond syntax differences to highlight
deeper paradigmatic approaches. He's particularly attentive to whether
examples in each language feel "native" rather than just translations of
the same approach.
